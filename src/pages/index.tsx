import { type NextPage } from "next";
import Head from "next/head";

import { trpc } from "../utils/trpc";
import { type MouseEvent, useState } from "react";
import { AiOutlineLoading3Quarters } from "react-icons/ai";

const Home: NextPage = () => {
  const downloadMutation = trpc.youtube.download.useMutation();
  const [url, setUrl] = useState<string>("");

  const submitUrl = (
    e: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>
  ) => {
    e.preventDefault();
    if (url.trim() !== "") {
      downloadMutation.mutateAsync({ url: url.trim() });
      console.log(downloadMutation.data?.xxx);
    }
  };

  return (
    <>
      <Head>
        <title>Youtube Video to MP3</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="  bg-[#111] text-white">
        <div className="mx-auto flex min-h-screen max-w-5xl flex-col justify-center">
          <div className="-mt-20 mb-12 text-4xl font-bold">
            Youtube Video to MP3
          </div>

          <div className="box rounded-xl border border-zinc-600 bg-black py-8 px-16">
            <form className="">
              <div className="flex flex-col">
                <label
                  className="mb-3 text-xl font-semibold"
                  htmlFor="youtube-link"
                >
                  Youtube video URL <span className="text-red-600">*</span>
                </label>
                <input
                  onChange={(e) => setUrl(e.target.value)}
                  value={url}
                  className="mx-auto w-full rounded-lg border border-zinc-600 bg-black py-2 px-4 text-zinc-100 outline outline-1 outline-black focus-within:outline-zinc-100"
                  id="youtube-link"
                  type="url"
                  placeholder="https://www.youtube.com"
                  required
                />
                {downloadMutation.error && (
                  <div className="mt-2 text-sm text-red-500">
                    {"The URL is not valid."}
                  </div>
                )}
              </div>
              <div className="mt-8 flex justify-center">
                <button
                  disabled={downloadMutation.isLoading || url.trim() === ""}
                  onClick={(e) => submitUrl(e)}
                  type="submit"
                  className="rounded-lg border  border-white bg-zinc-100 px-4 py-2 font-semibold text-black transition hover:bg-transparent hover:text-white disabled:cursor-not-allowed disabled:border-zinc-400 "
                >
                  {downloadMutation.isLoading ? (
                    <div className="py-1 px-2">
                      <AiOutlineLoading3Quarters className=" animate-spin" />
                    </div>
                  ) : (
                    "Download"
                  )}
                </button>
              </div>
            </form>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
